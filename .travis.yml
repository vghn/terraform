dist: xenial
env:
  TF_VERSION: '0.11.11'
install:
  # Install PIP packages
  - pip install --user --upgrade awscli && aws --version
  # Install Hashicorp's Terraform
  - |
    curl -L -o terraform.zip "https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
    unzip -d ~/bin terraform.zip
    terraform version
before_script: |
  . <( ( echo "$ENCRYPT_KEY" | base64 --decode ) |  gpg --batch --yes --decrypt --passphrase-fd 0 .env.gpg ) 2>/dev/null || true
  if [[ "$TRAVIS_BRANCH" == master && "$TRAVIS_PULL_REQUEST" == false ]]; then
    aws configure --profile ursa set aws_access_key_id "${TRAVIS_AWS_ACCESS_KEY_ID}"
    aws configure --profile ursa set aws_secret_access_key "${TRAVIS_AWS_SECRET_ACCESS_KEY}"
    aws configure --profile ursa set region us-east-1
    # aws configure --profile default set aws_access_key_id "${TRAVIS_AWS_ACCESS_KEY_ID}"
    # aws configure --profile default set aws_secret_access_key "${TRAVIS_AWS_SECRET_ACCESS_KEY}"
    # aws configure --profile ursa set role_arn "${TRAVIS_AWS_URSA_ROLE_ARN}"
    # aws configure --profile ursa set source_profile default
    # aws configure --profile ursa set region us-east-1
    aws configure --profile orion set role_arn "${TRAVIS_AWS_ORION_ROLE_ARN}"
    aws configure --profile orion set source_profile default
    aws configure --profile orion set region us-east-1
    aws configure --profile mec7 set role_arn "${TRAVIS_AWS_MEC7_ROLE_ARN}"
    aws configure --profile mec7 set source_profile default
    aws configure --profile mec7 set region us-west-2
  fi
script:
  - |
    if [[ "$TRAVIS_BRANCH" == master && "$TRAVIS_PULL_REQUEST" == false ]]; then
      ./tf init
      ./tf validate
      ./tf plan
      ./tf apply -auto-approve
    fi
notifications:
  webhooks:
    urls: https://vbot.ghn.me/travis
  slack:
    secure: xn6dlrKjuPJ9yLaFWBGG33vvL3Y5eNFRnLEkBe5bRZPpQ3aLTk6HZ142troCyGJRJs5lU3FHzfOI21aSm+ut04HLkjIrzgDi8lZ90Mzrv4GGLD4ba1cOhfc2ZQf4vUGI3s+uvdigqhy4IlUgjk91EEF9c865Suv0uaZA1Shy4fZmJ8BQ2caUJmO7MXUkGRclWqId5/G+EZkntn0Qti3Ygwn5BenIxXUInUtSa0LAG/lb2m8wzNStpcijewrSWUYVfw8NSG+Z4+cfyxKe94A2lBihi4qnJqBmrH46MQj8pbfOaGLx5SqKmlTI4QsEJFkfXoPsre0kC9SxPvd8bRPspRq2WHBP9nRF/8ZYxEIpmzB9dTQ1tEFVRhzSFUoqfc0v7uFsTGfF6bDDNtOSv9xNdeduSIbxk0itB1rKwCvU3YnYwp9twAT3Mo3QQxjMrM9K67PAp6uBNpKfrttM5cwIWw3QDBEGl85BRlWlGf9IHmkSL1pyRsbq56woE6K6GV//9Bo1+zQHD5CE9B2vXqdkvCGEJnnOVH4khc9JoNSG5WAVnQsGG78XcL1qVSDAM51bF+vZ+VKn22M2WIjDARXMBUSuyQPXguyAFi+vsGif+Xotw7hw3BxfHB6FuWd7FMg5P6arZtiR8QSA1jwW48WcT6bfcqDaNMnZYbQ0wlWgyQ8=
